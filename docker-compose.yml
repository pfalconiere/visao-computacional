version: '3.8'

services:
  # Redis - Broker e Backend do Celery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  # API Flask
  api:
    build: .
    command: gunicorn --bind 0.0.0.0:5000 --workers 2 --timeout 120 api:app
    ports:
      - "5000:5000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - FLASK_ENV=development
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: unless-stopped
  
  # Celery Worker
  worker:
    build: .
    command: celery -A celery_config.celery_app worker --loglevel=info --concurrency=2
    environment:
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - redis
    restart: unless-stopped
  
  # Flower - Monitoramento do Celery (opcional)
  flower:
    build: .
    command: celery -A celery_config.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - redis
      - worker
    restart: unless-stopped

volumes:
  redis_data:

